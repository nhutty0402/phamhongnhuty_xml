import os
from lxml import etree
from collections import defaultdict

def run_xpath(filename, queries, ns=None):
    """
    Ch·∫°y c√°c query XPath tr√™n file XML.
    - ƒê·ªëi v·ªõi query ƒë·∫∑c bi·ªát (xpath == ""), x·ª≠ l√Ω b·∫±ng Python.
    """
    try:
        tree = etree.parse(filename)
        root = tree.getroot()
        for label, xpath in queries:
            if xpath == "":  # Query ƒë·∫∑c bi·ªát: L·∫•y t·∫•t c·∫£ m√≥n ƒë∆∞·ª£c g·ªçi nhi·ªÅu h∆°n 1 l·∫ßn
                # Thu th·∫≠p t·∫•t c·∫£ CTHD, group theo MAMON, sum SOLUONG
                cthds = root.xpath("//q:CTHD", namespaces=ns)
                dish_count = defaultdict(int)
                for cthd in cthds:
                    mamon = cthd.xpath("./q:MAMON/text()", namespaces=ns)[0]
                    soluong = int(cthd.xpath("./q:SOLUONG/text()", namespaces=ns)[0])
                    dish_count[mamon] += soluong
                # L·∫•y t√™n m√≥n c√≥ t·ªïng SOLUONG > 1
                mons = root.xpath("//q:MON", namespaces=ns)
                result = []
                for mon in mons:
                    mamon = mon.xpath("./q:MAMON/text()", namespaces=ns)[0]
                    tenmon = mon.xpath("./q:TENMON/text()", namespaces=ns)[0]
                    if dish_count[mamon] > 1:
                        result.append(tenmon)
                print(f"{label}: {result}")
                continue
            
            # Ch·∫°y XPath th√¥ng th∆∞·ªùng
            result = root.xpath(xpath, namespaces=ns)
            if isinstance(result, (list, tuple)) and len(result) > 0 and isinstance(result[0], etree._Element):
                # N·∫øu l√† elements, in text content
                texts = [elem.text for elem in result if elem.text]
                print(f"{label}: {texts}")
            else:
                print(f"{label}: {result}")
    except FileNotFoundError:
        print(f"L·ªói: Kh√¥ng t√¨m th·∫•y file {filename}")
    except Exception as e:
        print(f"L·ªói khi ch·∫°y {label}: {e}")
# --- QUERIES ---
queries_sinhvien = [
    ("L·∫•y t·∫•t c·∫£ sinh vi√™n", "//student"),
    ("Li·ªát k√™ t√™n t·∫•t c·∫£ sinh vi√™n", "//student/name/text()"),
    ("L·∫•y t·∫•t c·∫£ id sinh vi√™n", "//student/id/text()"),
    ("L·∫•y ng√†y sinh c·ªßa sinh vi√™n c√≥ id='SV01'", "//student[id='SV01']/date/text()"),
    ("L·∫•y t·∫•t c·∫£ c√°c kh√≥a h·ªçc", "//enrollment/course/text()"),
    ("L·∫•y to√†n b·ªô th√¥ng tin c·ªßa sinh vi√™n ƒë·∫ßu ti√™n", "//student[1]/*/text()"),
    ("L·∫•y m√£ sinh vi√™n ƒëƒÉng k√Ω kh√≥a h·ªçc 'Vatly203'", "//enrollment[course='Vatly203']/studentRef/text()"),
    ("L·∫•y t√™n sinh vi√™n h·ªçc m√¥n 'Toan101'", "//student[id=//enrollment[course='Toan101']/studentRef]/name/text()"),
    ("L·∫•y t√™n sinh vi√™n h·ªçc m√¥n 'Vatly203'", "//student[id=//enrollment[course='Vatly203']/studentRef]/name/text()"),
    ("L·∫•y t√™n v√† ng√†y sinh c·ªßa sinh vi√™n sinh nƒÉm 1997", "//student[starts-with(date,'1997')]/name/text() | //student[starts-with(date,'1997')]/date/text()"),
    ("L·∫•y t√™n sinh vi√™n c√≥ ng√†y sinh tr∆∞·ªõc nƒÉm 1998", "//student[number(substring(date,1,4))<1998]/name/text()"),
    ("ƒê·∫øm t·ªïng s·ªë sinh vi√™n", "count(//student)"),
    ("L·∫•y ph·∫ßn t·ª≠ <date> ngay sau <name> c·ªßa SV01", "//student[id='SV01']/name/following-sibling::date/text()"),
    ("L·∫•y ph·∫ßn t·ª≠ <id> ngay tr∆∞·ªõc <name> c·ªßa SV02", "//student[name='L√™ Th·ªã H·ªìng C·∫©m']/preceding-sibling::id/text()"),
    ("L·∫•y to√†n b·ªô node <course> trong enrollment c√≥ studentRef='SV03'", "//enrollment[studentRef='SV03']/course/text()"),
    ("L·∫•y sinh vi√™n c√≥ h·ªç l√† 'Tr·∫ßn'", "//student[starts-with(name,'Tr·∫ßn')]/name/text()"),
    ("L·∫•y nƒÉm sinh c·ªßa sinh vi√™n SV01", "substring(//student[id='SV01']/date/text(),1,4)"),
    ("L·∫•y t·∫•t c·∫£ sinh vi√™n ch∆∞a ƒëƒÉng k√Ω m√¥n n√†o", "//student[not(id=//enrollment/studentRef)]")
]

queries_quanan = [
   ("L·∫•y t·∫•t c·∫£ b√†n", "//q:BAN"),
    ("L·∫•y t·∫•t c·∫£ nh√¢n vi√™n", "//q:NHANVIEN"),
    ("L·∫•y t·∫•t c·∫£ t√™n m√≥n", "//q:MON/q:TENMON/text()"),
    ("L·∫•y t√™n nh√¢n vi√™n c√≥ m√£ NV00000002", "//q:NHANVIEN[q:MANV/text()='NV00000002']/q:TENNV/text()"),
    ("L·∫•y t√™n nh√¢n vi√™n NV00000003", "//q:NHANVIEN[q:MANV/text()='NV00000003']/q:TENNV/text()"),
    ("L·∫•y s·ªë ƒëi·ªán tho·∫°i nh√¢n vi√™n NV00000003", "//q:NHANVIEN[q:MANV/text()='NV00000003']/q:SDT/text()"),
    ("L·∫•y t√™n m√≥n c√≥ gi√° > 50000", "//q:MON[number(q:GIA/text()) > 50000]/q:TENMON/text()"),
    ("L·∫•y s·ªë b√†n c·ªßa h√≥a ƒë∆°n SOHD=1003", "//q:HOADON[q:SOHD/text()='1003']/q:TENBAN/text()"),
    ("L·∫•y t√™n m√≥n c√≥ m√£ MON0000002", "//q:MON[q:MAMON/text()='MON0000002']/q:TENMON/text()"),
    ("L·∫•y ng√†y l·∫≠p c·ªßa h√≥a ƒë∆°n SOHD=1003", "//q:HOADON[q:SOHD/text()='1003']/q:NGAYLAP/text()"),
    ("L·∫•y t·∫•t c·∫£ m√£ m√≥n trong h√≥a ƒë∆°n SOHD=1001", "//q:CTHD[q:SOHD/text()='1001']/q:MAMON/text()"),
    ("L·∫•y t√™n m√≥n trong h√≥a ƒë∆°n SOHD=1001", "//q:MON[q:MAMON/text() = //q:CTHD[q:SOHD/text()='1001']/q:MAMON/text()]/q:TENMON/text()"),
    ("L·∫•y t√™n nh√¢n vi√™n l·∫≠p h√≥a ƒë∆°n SOHD=1002", "//q:NHANVIEN[q:MANV/text() = //q:HOADON[q:SOHD/text()='1002']/q:MANV/text()]/q:TENNV/text()"),
    ("ƒê·∫øm s·ªë b√†n", "count(//q:BAN)"),
    ("ƒê·∫øm s·ªë h√≥a ƒë∆°n l·∫≠p b·ªüi NV00000001", "count(//q:HOADON[q:MANV/text()='NV00000001'])"),
    ("L·∫•y t√™n t·∫•t c·∫£ m√≥n c√≥ trong h√≥a ƒë∆°n b√†n s·ªë 2", "//q:MON[q:MAMON/text() = //q:CTHD[q:SOHD/text() = //q:HOADON[q:TENBAN/text()='BAN0000002']/q:SOHD/text()]/q:MAMON/text()]/q:TENMON/text()"),
    ("L·∫•y t·∫•t c·∫£ nh√¢n vi√™n t·ª´ng l·∫≠p h√≥a ƒë∆°n cho b√†n s·ªë 3", "//q:NHANVIEN[q:MANV/text() = //q:HOADON[q:TENBAN/text()='BAN0000003']/q:MANV/text()]/q:TENNV/text()"),
    ("L·∫•y t·∫•t c·∫£ h√≥a ƒë∆°n m√† nh√¢n vi√™n n·ªØ l·∫≠p", "//q:HOADON[q:MANV/text() = //q:NHANVIEN[q:GIOITINH/text()='N·ªØ']/q:MANV/text()]"),
    ("L·∫•y t·∫•t c·∫£ nh√¢n vi√™n t·ª´ng ph·ª•c v·ª• b√†n s·ªë 1", "//q:NHANVIEN[q:MANV/text() = //q:HOADON[q:TENBAN/text()='BAN0000001']/q:MANV/text()]/q:TENNV/text()"),
    ("L·∫•y t·∫•t c·∫£ m√≥n ƒë∆∞·ª£c g·ªçi nhi·ªÅu h∆°n 1 l·∫ßn", ""),  # X·ª≠ l√Ω ƒë·∫∑c bi·ªát trong code
    ("L·∫•y t√™n b√†n c·ªßa h√≥a ƒë∆°n SOHD=1002", "//q:HOADON[q:SOHD/text()='1002']/q:TENBAN/text()"),
    ("L·∫•y ng√†y l·∫≠p h√≥a ƒë∆°n SOHD=1002", "//q:HOADON[q:SOHD/text()='1002']/q:NGAYLAP/text()")
]

if __name__ == "__main__":
    print(f"üìÇ ƒêang ch·∫°y t·∫°i: {os.getcwd()}")
    # Ch·∫°y cho sinhvien.xml (n·∫øu c√≥ file v√† queries)
    if queries_sinhvien:  # Ch·ªâ ch·∫°y n·∫øu c√≥ queries
        run_xpath("sinhvien.xml", queries_sinhvien)
    # Ch·∫°y cho quanlybanan.xml
    run_xpath("quanlybanan.xml", queries_quanan, ns={'q': 'http://example.com/quanan'})
    input("Nh·∫•n Enter ƒë·ªÉ tho√°t...")
    